notifications:
    email:
        on_success: change
        on_failure: change
language: minimal
env:
    global:
        - DOCKER_COMPOSE_VERSION=1.23.0
        - COMPOSER_CACHE_DIR=.composer/cache
        - SSH_DEPLOY_KEY_PATH=./app/Resources/deploy/deploy_key
        - DEPLOY_SERVER_HOST=vps632104.ovh.net
services:
    - docker
stages:
    - test
    - deploy
jobs:
    include:
        -   stage: test
            name: test
            cache:
                directories:
                    - docker-images
                    - vendor
                    - "$COMPOSER_CACHE_DIR"
            before_install:
                - sudo rm /usr/local/bin/docker-compose
                - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
                    -s`-`uname -m` > docker-compose
                - chmod +x docker-compose
                - sudo mv docker-compose /usr/local/bin
                - mkdir -p docker-images
                - test -e docker-images/phpquiz-php.tar.gz && (ls -halt docker-images; (gzip -dc
                    docker-images/phpquiz-php.tar.gz | docker load)) || echo 'no phpquiz-php image
                    cache'
                - cp -f docker-compose.override.travis.yml docker-compose.override.yml
                - bash docker/start.sh
                - test -e docker-images/phpquiz-php.tar.gz && echo 'phpquiz-php image cache already
                    exists' || (docker save phpquiz-php | gzip > docker-images/phpquiz-php.tar.gz)
            script:
                - docker exec -ti php /bin/bash -c 'sleep 3;'
                - docker exec -ti php /bin/bash -c 'bash reset-data.sh --force'
                - docker exec -ti php /bin/bash -c 'bash install.sh'
                - docker exec -ti php /bin/bash -c 'bash update.sh'
                - docker exec -ti php /bin/bash -c 'bash test.sh'
        -   stage: deploy
            if: branch = master
            name: deploy
            before_install:
                - openssl aes-256-cbc -K $encrypted_05beada88e3a_key -iv $encrypted_05beada88e3a_iv
                    -in ${SSH_DEPLOY_KEY_PATH}.enc -out ${SSH_DEPLOY_KEY_PATH} -d
                - eval "$(ssh-agent -s)"
                - chmod 600 ${SSH_DEPLOY_KEY_PATH}
                - echo -e "Host ${DEPLOY_SERVER_HOST}\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
                - ssh-add ${SSH_DEPLOY_KEY_PATH}
            script:
                - ssh -i ${SSH_DEPLOY_KEY_PATH} root@${DEPLOY_SERVER_HOST} "echo 'Connected, Hello !!!! '; hostname"
                - scp -i ${SSH_DEPLOY_KEY_PATH} app/Resources/deploy/deploy.sh root@${DEPLOY_SERVER_HOST}:phpquiz/deploy.sh
                - ssh -i ${SSH_DEPLOY_KEY_PATH} root@${DEPLOY_SERVER_HOST} "bash phpquiz/deploy.sh"
