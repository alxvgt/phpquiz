notifications:
    email:
        on_success: never
        on_failure: change

branches:
    only:
        - master

language: minimal

env:
    - DOCKER_COMPOSE_VERSION=1.23.0

services:
    - docker

cache:
    directories:
        - docker-images

before_install:
    - sudo rm /usr/local/bin/docker-compose
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin
    - mkdir -p docker-images
    - test -e docker-images/phpquiz-php.tar.gz && (ls -halt docker-images; (gzip -dc docker-images/phpquiz-php.tar.gz | docker load)) || echo 'no phpquiz-php image cache'
    - chmod +x docker/php/entrypoint.sh
    - cp -f docker-compose.override.travis.yml docker-compose.override.yml
    - bash docker/start.sh
    - docker save phpquiz-php | gzip > docker-images/phpquiz-php.tar.gz

stages:
    - test stage
    - deploy stage

jobs:
    include:
        -   stage: test stage
            name: test job
            script:
                - docker exec -ti php /bin/bash -c 'bash reset-data.sh --force'
                - docker exec -ti php /bin/bash -c 'bash install.sh'
                - docker exec -ti php /bin/bash -c 'bash update.sh'
                - docker exec -ti php /bin/bash -c 'bash test.sh'
        -   stage: deploy stage
            name: deploy job
            script:
                - echo 'Deploy job !'
